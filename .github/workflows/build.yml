name: Build Project

on:
  push:
    tags: 
      - v[0-9].[0-9]+.[0-9]+*
  # pr's will trigger this action. i think the idea here is to verify that a build is passing before merging.
  pull_request:
    branches: 
      - main
  
jobs:
  Release:
    runs-on: windows-latest
    steps:
      - name: Parse tag semver
        uses: booxmedialtd/ws-action-parse-semver@3576f3a20a39f8752fe0d8195f5ed384090285dc
        id: semver_parser
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: '\/v(.*)$'
        
        # please keep this for an adjustment period, will help diagnose any issues
      - name: Debug semver
        run: |
            echo 'major: ${{ steps.semver_parser.outputs.major }}'
            echo 'minor: ${{ steps.semver_parser.outputs.minor }}'
            echo 'patch: ${{ steps.semver_parser.outputs.patch }}'
            echo 'feature (is pre-release?): ${{ steps.semver_parser.outputs.prerelease }}'
            echo 'feature ver: ${{ steps.semver_parser.outputs.build }}'
            echo 'full: ${{ steps.semver_parser.outputs.fullversion }}'
            echo 'is pre-release: ${{ steps.semver_parser.outputs.prerelease != 0 }}'
          
      - name: Checkout
        uses: actions/checkout@v2.3.4
      
      - name: Build Release
        shell: bash
        run: '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" -property:Configuration=Release'
        
      - name: Build Release_Version
        shell: bash
        run: '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" -property:Configuration=Release_Version'
      
      # used solely for backwards compat, can remove once all the discord stuff is changed to use the release instead of the artifacts
      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2.2.1
        with:
          name: Release
          path: |
            ./Release/AmongUsMenu.dll
            ./Release_Version/version.dll
            ./LICENSE
            
      - name: Package Builds
        if: ${{ github.event_name == 'push' }}
        run: tar -caf Release_${{ github.sha }}.zip Release/AmongUsMenu.dll Release_Version/version.dll LICENSE
      
      - name: Automatic Releases
        if: ${{ github.event_name == 'push' }}
        uses: marvinpinto/action-automatic-releases@526ce12c6675bbe6e0e9a4169c90d09a3f7ad3e2
        id: "automatic_releases"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: ${{ steps.semver_parser.outputs.prerelease != 0 }}
          title: "Release Build"
          files: |
            Release_${{ github.sha }}.zip
      # note, we can invoke the discord webhook here and send it ${{ steps.automatic_releases.outputs.upload_url }} for a direct link to the release
      # if we do that we can probably remove the artifact uploads entirely unless there's a reason to keep them?
      
  Debug:
    # note, this job can probably be merged into the above job for a slightly faster action
    runs-on: windows-latest
    steps:
      - name: Parse tag semver
        uses: booxmedialtd/ws-action-parse-semver@3576f3a20a39f8752fe0d8195f5ed384090285dc
        id: semver_parser
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: '\/v(.*)$'
        
        # please keep this for an adjustment period, will help diagnose any issues
      - name: Debug semver
        run: |
            echo 'major: ${{ steps.semver_parser.outputs.major }}'
            echo 'minor: ${{ steps.semver_parser.outputs.minor }}'
            echo 'patch: ${{ steps.semver_parser.outputs.patch }}'
            echo 'feature (is pre-release?): ${{ steps.semver_parser.outputs.prerelease }}'
            echo 'feature ver: ${{ steps.semver_parser.outputs.build }}'
            echo 'full: ${{ steps.semver_parser.outputs.fullversion }}'
            echo 'is pre-release: ${{ steps.semver_parser.outputs.prerelease != 0 }}'
            
      - name: Checkout
        uses: actions/checkout@v2.3.4
      
      - name: Build Debug
        shell: bash
        run: '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" -property:Configuration=Debug'
        
      - name: Build Debug_Version
        shell: bash
        run: '"/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" -property:Configuration=Debug_Version'
      
      # used solely for backwards compat, can remove once all the discord stuff is changed to use the release instead of the artifacts
      - name: Upload Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v2.2.1
        with:
          name: Debug
          path: |
            ./Debug/AmongUsMenu.dll
            ./Debug_Version/version.dll
            ./LICENSE
            
      - name: Package Builds
        if: ${{ github.event_name == 'push' }}
        run: tar -caf Debug_${{ github.sha }}.zip Debug/AmongUsMenu.dll Debug_Version/version.dll LICENSE
        
      - name: Automatic Releases
        if: ${{ github.event_name == 'push' }}
        uses: marvinpinto/action-automatic-releases@526ce12c6675bbe6e0e9a4169c90d09a3f7ad3e2
        id: "automatic_releases"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: ${{ steps.semver_parser.outputs.prerelease != 0 }}
          title: "Debug Build"
          files: |
            Debug_${{ github.sha }}.zip
  
  Notification:
    if: ${{ github.event_name == 'push' && github.repository == 'BitCrackers/AmongUsMenu' }}
    runs-on: ubuntu-latest
    needs: [Release, Debug]
    steps:
      - name: Discord Notification
        uses: rjstone/discord-webhook-notify@v1.0.4
        with:
          severity: info
          description: "Project Build"
          details: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          webhookUrl: ${{ secrets.DISCORD_BUILD_WEBHOOK }}
